{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport withApollo from \"next-with-apollo\";\nimport ApolloClient from \"apollo-boost\";\nimport { devToken, prodToken } from \"../config\";\n\nfunction createClient(_ref) {\n  var headers = _ref.headers;\n  return new ApolloClient({\n    uri: \"https://grapgqltest.mybigcommerce.com/graphql\",\n    request: function request(operation) {\n      operation.setContext({\n        headers: _objectSpread({}, headers, {\n          //decode\n          Authorization: process.env.NODE_ENV === \"development\" ? \"Bearer \".concat(devToken) : \"Bearer \".concat(prodToken)\n        })\n      });\n    },\n    // local data\n    clientState: {\n      resolvers: {\n        Mutation: {}\n      },\n      defaults: {}\n    }\n  });\n}\n\nexport default withApollo(createClient);","map":{"version":3,"sources":["/Users/george.fitzgibbons/dev/nextJS/finished-application/frontend/lib/withData.js"],"names":["withApollo","ApolloClient","devToken","prodToken","createClient","headers","uri","request","operation","setContext","Authorization","process","env","NODE_ENV","clientState","resolvers","Mutation","defaults"],"mappings":";AAAA,OAAOA,UAAP,MAAuB,kBAAvB;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,WAApC;;AAEA,SAASC,YAAT,OAAmC;AAAA,MAAXC,OAAW,QAAXA,OAAW;AACjC,SAAO,IAAIJ,YAAJ,CAAiB;AACtBK,IAAAA,GAAG,EAAE,+CADiB;AAEtBC,IAAAA,OAAO,EAAE,iBAAAC,SAAS,EAAI;AACpBA,MAAAA,SAAS,CAACC,UAAV,CAAqB;AACnBJ,QAAAA,OAAO,oBACFA,OADE;AAEL;AAEAK,UAAAA,aAAa,EACXC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,oBACcX,QADd,qBAEcC,SAFd;AALG;AADY,OAArB;AAWD,KAdqB;AAetB;AACAW,IAAAA,WAAW,EAAE;AACXC,MAAAA,SAAS,EAAE;AACTC,QAAAA,QAAQ,EAAE;AADD,OADA;AAIXC,MAAAA,QAAQ,EAAE;AAJC;AAhBS,GAAjB,CAAP;AAuBD;;AAED,eAAejB,UAAU,CAACI,YAAD,CAAzB","sourcesContent":["import withApollo from \"next-with-apollo\";\nimport ApolloClient from \"apollo-boost\";\nimport { devToken, prodToken } from \"../config\";\n\nfunction createClient({ headers }) {\n  return new ApolloClient({\n    uri: \"https://grapgqltest.mybigcommerce.com/graphql\",\n    request: operation => {\n      operation.setContext({\n        headers: {\n          ...headers,\n          //decode\n\n          Authorization:\n            process.env.NODE_ENV === \"development\"\n              ? `Bearer ${devToken}`\n              : `Bearer ${prodToken}`\n        }\n      });\n    },\n    // local data\n    clientState: {\n      resolvers: {\n        Mutation: {}\n      },\n      defaults: {}\n    }\n  });\n}\n\nexport default withApollo(createClient);\n"]},"metadata":{},"sourceType":"module"}